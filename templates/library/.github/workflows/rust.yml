name: Test, Upload Coverage and Release Rust

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-native:
    {% raw -%}
    runs-on: ${{ matrix.os }}
    {%- endraw %}
    strategy:
      matrix:
        os: 
          - ubuntu-latest
{%- if xplat %}
          - macos-latest
          - windows-latest
{%- endif %}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: test-rust
        uses: Reloaded-Project/reloaded-project-configurations-rust/.github/actions/test-and-coverage@v1 # upgrade if needed

{%- if wine %}

  test-on-wine:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: test-rust
        uses: Reloaded-Project/reloaded-project-configurations-rust/.github/actions/test-in-wine@v1 # upgrade if needed
{%- endif %}

{%- if build-c-libs %}

  build-c-libs:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    {% raw -%}
    runs-on: ${{ matrix.os }}
    {%- endraw %}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: build-libs
        uses: Reloaded-Project/reloaded-project-configurations-rust/.github/actions/build-c-library@v1 # upgrade if needed
        with:
          rust_project_path: src-rust
          {% raw -%}
          target: ${{ matrix.target }}{%- endraw %}
{%- endif %}

{%- if publish-crate-on-tag %}

  publish-crate:
    needs: [test-native{%- if build-c-libs %},build-c-libs{%- endif %}{%- if wine %},test-on-wine{%- endif %} ]
    # Publish only on tags
    if: startsWith(github.ref, 'refs/tags/') 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: ↙️ Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Compress Artifacts
        shell: bash
        run: |
          dir="artifacts" # Replace with your subdirectory
          for subdir in "$dir"/*; do
            if [ -d "$subdir" ]; then
              base=$(basename "$subdir")
              zip -r "$dir/$base.zip" "$subdir"
              rm -r "$subdir"
            fi
          done
          ls -A ./artifacts

      - name: GitHub Release Artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*

      - name: Publish to crates.io
        uses: Reloaded-Project/reloaded-project-configurations-rust/.github/actions/publish-crate@v1
        with:
          rust_project_path: src-rust
          {% raw -%}
          token: ${{ secrets.CRATES_IO_TOKEN }}{%- endraw %}
{%- endif %}